doctype html
html(lang='en-us')
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge,chrome=1')
    meta(name='viewport', content='width=device-width')
    link(rel="stylesheet" type = "text/css", href = "../jquery-ui/themes/base/jquery-ui.min.css")
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css')
    link(href='https://cdn.bootcss.com/twitter-bootstrap/3.4.0/css/bootstrap.min.css', rel='stylesheet')
    link(rel='stylesheet', href='../bootstrap-star-rating/css/star-rating.min.css')
    link(rel='stylesheet', href='css/style.css')
  body
    #popup(style="display:none")
      div#popup-container
        p#user-id(style="display:none") 请复制黄色文字&nbsp&nbsp
          span XXXXXX
          | &nbsp&nbsp粘贴到下方问卷的第一个问题处
        i.fa.fa-close.fa-3x
      iframe
        
    #container
      .context
        #likedsongs
            h5(style="text-align:center; font-weight:bold; background:yellow") Task: look for 5 good songs that fit the current scenario and your taste.
            ul.list-group
        #task1(style="display:none") You have finished the first task, please fill the questionnaire and then go to the next task.
        #task2(style="display:none") You have finished all the tasks, please fill the questionnaire.
        br
        button.btn.btn-info#questionnaire-1(style="display:none") Questionnaire for scenario 1
        button.btn.btn-info#questionnaire-2(style="display:none") Please fill the final questionnaire :)
        br
        button#next-task.btn.btn-primary(style="display:none") Next task
        br
        button#start-task.btn.btn-primary Start study

      .iphone-x
        .chart
          #barchart
            form#barchart-control
              &nbsp&nbsp
              input#tempo(type='radio', name='mode', value ='tempo',checked='')
              | &nbspTempo&nbsp&nbsp
              input#popularity(type='radio', name='mode', value ='popularity')
              | &nbspPopularity&nbsp&nbsp
              input#energy(type='radio', name='mode', value ='energy')
              | &nbspEnergy&nbsp&nbsp
              input#valence(type='radio', name='mode', value ='valence')
              | &nbspValence&nbsp&nbsp
              input#danceability(type='radio', name='mode', value ='danceability')
              | &nbspDanceability
            #barchart-svg
          #bubble
        .window(style="display:none")
          .chat
        input#message(type='text', name='message', value='', placeholder="Chat with me!", style="display:none")
        #player(style='background:#f1f3f4')
          p
            span#title
            span#artist
          audio(id="myAudio" controls='')
            source(src='', type='audio/mpeg')
            | Your browser does not support the audio element.


      .task
        #accordion
          h3 Tips for tuning the recommendations by audio features
          div
            p Currently the system supports searching by 5 audio features, 

            p
              span.exp(data-container="body" data-toggle='popover', data-placement='auto', data-content='Energy represents a perceptual measure of intensity and activity. Typically, energetic tracks feel fast, loud, and noisy. For example, death metal has high energy, while a Bach prelude scores low on the scale.', style="color:#2061E5") Energy:
              span To tweak recommendation by energy, you can say "I need more/less energy", "I need higher/lower energy".
            
            p
              span.exp(data-container="body" data-toggle='popover', data-placement='auto', data-content='Danceability describes how suitable a track is for dancing based on a combination of musical elements including tempo, rhythm stability, beat strength, and overall regularity.', style="color:#2061E5") Danceability:
              span To tweak recommendation by danceability, you can say "I need higher/lower danceability", "I need to dance", "Play a song for dancing".

            p
              span.exp(data-container="body" data-toggle='popover', data-placement='auto', data-content='Speechiness detects the presence of spoken words in a track.', style="color:#2061E5") Speechiness:
              span To tweak recommendation by speechiness, you can say "I need more/less speech", "Play a song with less speech".

            p
              span.exp(data-container="body" data-toggle='popover', data-placement='auto', data-content='Tempo is the speed or pace of a given piece and derives directly from the average beat duration.', style="color:#2061E5") Tempo:
              span To tweak recommendation by tempo, you can say "I like slow/fast songs", "Play some fast music".

            p
              span.exp(data-container="body" data-toggle='popover', data-placement='auto', data-content='Tracks with high valence sound more positive (e.g. happy, cheerful, euphoric), while tracks with low valence sound more negative (e.g. sad, depressed, angry).', style="color:#2061E5") valence:
              span To tweak recommendation by tempo, you can say "I feel happy", "feel sad".

          h3 Tips for tuning the recommendations by music categories
          div
            p
              | If you want to search for songs by genres such as pop, rock, jazz, R&B,
              | you can say
            p "Play songs for traveling"
            p "Songs for party"
            p "Play songs for the family"
            p "Play jazz songs"
            p "I like rock"
            p "Play a pop song"
            p ...
          h3 Tips for tuning the recommendations by music languages
          div
            p You can specify the language of songs by saying
            p "I like Chinese songs"
            p "Play a English song"
            p "Find me some good music on Chinese"
            p "I want to listen to English music"
            p ...
          h3 Tips for tuning the recommendations by artists
          div
            p If you want to search for songs by artists, you can say
            p "Play Justin Bieber songs"
            p "I like Lady Gaga music"
            p ...
    script(type = "text/javascript", src = "../jquery/dist/jquery.min.js", charset = 'utf-8')
    script(type = "text/javascript", src = "../jquery.cookie/jquery.cookie.js", charset = 'utf-8')
    script(type = "text/javascript", src = "../jquery-ui/jquery-ui.min.js", charset = 'utf-8')
    script(type = "text/javascript", src = "../d3/d3.min.js", charset = 'utf-8')
    script(type = "text/javascript", src = "js/popper.min.js", charset = 'utf-8')
    script(src='/socket.io/socket.io.js')
    script(src = "https://cdn.bootcss.com/twitter-bootstrap/3.4.0/js/bootstrap.min.js")
    script(src='../bootstrap-star-rating/js/star-rating.min.js')
    script(src='js/recorder-core.js')
    script(src='js/wav.js')
    script(src='js/axios.min.js')
    script(src='js/script.js')
